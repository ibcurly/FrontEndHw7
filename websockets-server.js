var WebSocket = require('ws');
var WebSocketServer = WebSocket.Server;
var port = 3001;
var ws = new WebSocketServer({
  port: port
});
var messages = [];
var topic;

console.log('websockets server started');

//establish a callback for any connection events for your WebSockets server to handle connections
ws.on('connection', function(socket) {
  console.log('client connection established');

  if (topic) {
    socket.send(topic);
  }

  //send out all the old messages to each new connection as it arrives
  messages.forEach(function(msg) {
    socket.send(msg);
  });
  //echo functionality in websockets-server.js by registering a callback
  //for any message events generated by the client connection
  socket.on('message', function(data) {
    console.log('message received: ' + data);
    //add each new message to your array as it arrives
    messages.push(data);
    //rebroadcast your received messages
    //send new messages to all the users as each new message comes in
    //The ws object (array) keeps track of all connections via its clients property.
    ws.clients.forEach(function(clientSocket) {
      if (data.substring(0, 6) == '/topic') {
        clientSocket.send('*** Topic has changed to \'' + data.substring(7) + '\'');
        topic = '*** Topic is \'' + data.substring(7) + '\'';
        messages.pop();
      } else {
        clientSocket.send(data);
      }
    });
  });
});
